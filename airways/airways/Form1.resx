<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>